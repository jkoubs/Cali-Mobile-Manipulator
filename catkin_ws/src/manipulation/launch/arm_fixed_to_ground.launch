<?xml version="1.0"?>
<launch>

    <!-- roslaunch arguments -->
    <arg name="debug" default="false"/>

    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find manipulation)/description/urdf/arm_fixed_to_ground.xacro'" />

    <!-- Combine joint values -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn= "false" output="screen">
    </node>

    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.0"/>

    <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-urdf -param robot_description -model rover_autonav -x $(arg x) -y $(arg y) -z $(arg z)" />

    <!-- JOINT STATE CONTROLLER -->
    <rosparam file="$(find manipulation)/config/joint_state_controller_arm.yaml" command="load"/>

    <!-- ARM CONTROLLER -->
    <rosparam file="$(find manipulation)/config/arm_controller_scorbot.yaml" command="load"/>

    <!--GRIPPER CONTROLLER-->
    <rosparam file="$(find manipulation)/config/gripper_controller.yaml" command="load"/>
    <param name="gripper_controller/joint" value="scorbot_pad1_joint"/>

    <!-- Launch PIDs for Gripper Controller-->
    <rosparam file="$(find manipulation)/config/gazebo_controller.yaml" command="load" />

    <!-- Controller Manager-->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen" 
    args="joint_state_controller scaled_pos_joint_traj_controller gripper_controller"/>

    <!-- start trajectory controller GUI to control each joint separately -->
    <node name="arm_control_gui" pkg="rqt_joint_trajectory_controller" type="rqt_joint_trajectory_controller" respawn="false" output="screen"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="debug" value="$(arg debug)" />
            <arg name="paused" value="false"/>
            <arg name="use_sim_time" value="true"/>
            <arg name="headless" value="false"/>
            <arg name="verbose" value="true"/>
    </include>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find manipulation)/rviz_config/arm_to_ground.rviz" />




</launch>